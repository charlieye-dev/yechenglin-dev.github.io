<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Ye's Blog</title><link>/posts/kubernetes/</link><description>Recent content in Kubernetes on Ye's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Dec 2020 06:00:20 +0600</lastBuildDate><atom:link href="/posts/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Helm</title><link>/posts/kubernetes/helm/</link><pubDate>Tue, 22 Dec 2020 06:00:20 +0600</pubDate><guid>/posts/kubernetes/helm/</guid><description>Helm Local helm repository for preparing a local helm repository, user has to setup follows,
ChartMuseum is an open-source, easy to deploy, Helm Chart Repository server.
https://chartmuseum.com/ https://github.com/helm/chartmuseum
Helm-servecm is a plugin that help to start ChartMuseum server.
https://github.com/jdolitsky/helm-servecm
Helm-push is a helm plugin to push helm chart package to ChartMuseum.
https://github.com/chartmuseum/helm-push
Install ChartMuseum/Helm-servecm/Helm-push plugins install ChartMuseum/Helm-servecm</description></item><item><title>Kubeadm</title><link>/posts/kubernetes/kubeadm/</link><pubDate>Tue, 22 Dec 2020 06:00:20 +0600</pubDate><guid>/posts/kubernetes/kubeadm/</guid><description>Kubeadm This document shows some usages of kubeadm.
Official document:
https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/
Specify certifications and token when kubeadm init. Generate certificates
openssl genrsa -out ca.key 2048 openssl rand -writerand .rnd openssl req -x509 -new -nodes -key ca.key -subj &amp;quot;/CN=$MASTER_IP&amp;quot; -days 10000 -out ca.crt cp ca.key /etc/kubernetes/pki cp ca.crt /etc/kubernetes/pki Initialize cluster
kubeadm init --token 5uitrl.aiajjpm6mkoouzkk --token-ttl 0 --cert-dir /etc/kubernetes/pki/ since there is no tool for creating a token(kubeadm token can be valid when cluster is running only), it can spcify a token as token format.</description></item><item><title>Kubelet</title><link>/posts/kubernetes/kubelet/</link><pubDate>Tue, 22 Dec 2020 06:00:20 +0600</pubDate><guid>/posts/kubernetes/kubelet/</guid><description>Kubelet This document provides some tips of using kubelet.
Official documents:
https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
Tips Since all slave nodes have no capability of storing in kubernetes, it means that kubelet has to request api-server in period.
Once slave node was registered to cluster, it no way reconfigure some features by restarting kubelet, for example labeling node by --node-label option when start kubelet. However, if slave node is deleted by administrator(kubectl delete node $NODE_NAME) from cluster, slave node can rejoin cluster by restarting cluster, also some reconfigurable features will active.</description></item><item><title>Taint manager eviction</title><link>/posts/kubernetes/taint_manager_eviction/</link><pubDate>Tue, 22 Dec 2020 06:00:20 +0600</pubDate><guid>/posts/kubernetes/taint_manager_eviction/</guid><description>Taint Based Eviction https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/#taint-based-evictions
For current kubernetes, Taint based Evictions support as follows,
tolerations node.kubernetes.io/not-ready:NoExecute for 300s and node.kubernetes.io/unreachable:NoExecute for 300s are marked on pods in default by k8s when deploy, it means that pods can tolerate these taints for 300s.
$ kubectl describe po my-pod-787f46887-cx2gt | grep -i node Node: edge/192.168.0.4 Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s node.kubernetes.io/unreachable:NoExecute for 300s once a slave node was disconnected from cluster, taints node.</description></item></channel></rss>